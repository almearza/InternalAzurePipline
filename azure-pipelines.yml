# trigger:
# - master

# pool:
#   name: Default

# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'

# steps:
# - task: UseDotNet@2
#   inputs:
#     packageType: 'sdk'
#     version: '6.x'
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'
 
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     projects: '**/*.csproj'
#     arguments:  '--configuration $(buildConfiguration)'
# - task: DotNetCoreCLI@2
#   displayName: 'restore task' 
#   inputs:
#     command: restore
#     projects: '**/testWeb.csproj'
# - task: DotNetCoreCLI@2
#   displayName: 'test task'
#   inputs:
#     command: 'test'
#     projects: '**/testWeb.csproj'
#     arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./MyCoverage/'
#     publishTestResults: true
# - task: PublishCodeCoverageResults@1
#   displayName: 'code coverage'
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(Build.SourceDirectory)/**/MyCoverage/coverage.cobertura.xml'

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
steps:

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: MSBuild@1
  inputs:
    solution: '**/*.sln'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonar Connection'
    organization: 'scorg'
    scannerMode: 'MSBuild'
    projectKey: 'scorg_sc-project'
    projectName: 'Sonar Prj'

- task: SonarCloudAnalyze@1
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

# - task: WhiteSource@21
#   inputs:
#     cwd: '$(System.DefaultWorkingDirectory)'
#     projectName: 'webApp'
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: false

# - task: MSBuild@1
#   inputs:
#     solution: '**/*.sln'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
#     msbuildArguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'

